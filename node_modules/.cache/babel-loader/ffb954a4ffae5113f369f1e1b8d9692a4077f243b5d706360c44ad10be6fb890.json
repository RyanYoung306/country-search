{"ast":null,"code":"/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function (define) {\n  'use strict';\n\n  define(function (require) {\n    var fatal = require('./fatal');\n    return function flow(Promise) {\n      var resolve = Promise.resolve;\n      var reject = Promise.reject;\n      var origCatch = Promise.prototype['catch'];\n\n      /**\n       * Handle the ultimate fulfillment value or rejection reason, and assume\n       * responsibility for all errors.  If an error propagates out of result\n       * or handleFatalError, it will be rethrown to the host, resulting in a\n       * loud stack track on most platforms and a crash on some.\n       * @param {function?} onResult\n       * @param {function?} onError\n       * @returns {undefined}\n       */\n      Promise.prototype.done = function (onResult, onError) {\n        var h = this._handler;\n        h.when(this._maybeFatal, noop, this, h.receiver, onResult, onError);\n      };\n\n      /**\n       * Check if x is a rejected promise, and if so, delegate to this._fatal\n       * @private\n       * @param {*} x\n       */\n      Promise.prototype._maybeFatal = function (x) {\n        if (Object(x) === x) {\n          resolve(x)['catch'](this._fatal);\n        }\n      };\n\n      /**\n       * Propagate fatal errors to the host environment.\n       * @private\n       */\n      Promise.prototype._fatal = fatal;\n\n      /**\n       * Add Error-type and predicate matching to catch.  Examples:\n       * promise.catch(TypeError, handleTypeError)\n       *   .catch(predicate, handleMatchedErrors)\n       *   .catch(handleRemainingErrors)\n       * @param onRejected\n       * @returns {*}\n       */\n      Promise.prototype['catch'] = Promise.prototype.otherwise = function (onRejected) {\n        if (arguments.length === 1) {\n          return origCatch.call(this, onRejected);\n        } else {\n          if (typeof onRejected !== 'function') {\n            return this.ensure(rejectInvalidPredicate);\n          }\n          return origCatch.call(this, createCatchFilter(arguments[1], onRejected));\n        }\n      };\n\n      /**\n       * Wraps the provided catch handler, so that it will only be called\n       * if the predicate evaluates truthy\n       * @param {?function} handler\n       * @param {function} predicate\n       * @returns {function} conditional catch handler\n       */\n      function createCatchFilter(handler, predicate) {\n        return function (e) {\n          return evaluatePredicate(e, predicate) ? handler.call(this, e) : reject(e);\n        };\n      }\n\n      /**\n       * Ensures that onFulfilledOrRejected will be called regardless of whether\n       * this promise is fulfilled or rejected.  onFulfilledOrRejected WILL NOT\n       * receive the promises' value or reason.  Any returned value will be disregarded.\n       * onFulfilledOrRejected may throw or return a rejected promise to signal\n       * an additional error.\n       * @param {function} handler handler to be called regardless of\n       *  fulfillment or rejection\n       * @returns {Promise}\n       */\n      Promise.prototype['finally'] = Promise.prototype.ensure = function (handler) {\n        if (typeof handler !== 'function') {\n          // Optimization: result will not change, return same promise\n          return this;\n        }\n        handler = isolate(handler, this);\n        return this.then(handler, handler);\n      };\n\n      /**\n       * Recover from a failure by returning a defaultValue.  If defaultValue\n       * is a promise, it's fulfillment value will be used.  If defaultValue is\n       * a promise that rejects, the returned promise will reject with the\n       * same reason.\n       * @param {*} defaultValue\n       * @returns {Promise} new promise\n       */\n      Promise.prototype['else'] = Promise.prototype.orElse = function (defaultValue) {\n        return this.then(void 0, function () {\n          return defaultValue;\n        });\n      };\n\n      /**\n       * Shortcut for .then(function() { return value; })\n       * @param  {*} value\n       * @return {Promise} a promise that:\n       *  - is fulfilled if value is not a promise, or\n       *  - if value is a promise, will fulfill with its value, or reject\n       *    with its reason.\n       */\n      Promise.prototype['yield'] = function (value) {\n        return this.then(function () {\n          return value;\n        });\n      };\n\n      /**\n       * Runs a side effect when this promise fulfills, without changing the\n       * fulfillment value.\n       * @param {function} onFulfilledSideEffect\n       * @returns {Promise}\n       */\n      Promise.prototype.tap = function (onFulfilledSideEffect) {\n        return this.then(onFulfilledSideEffect)['yield'](this);\n      };\n      return Promise;\n    };\n    function rejectInvalidPredicate() {\n      throw new TypeError('catch predicate must be a function');\n    }\n    function evaluatePredicate(e, predicate) {\n      return isError(predicate) ? e instanceof predicate : predicate(e);\n    }\n    function isError(predicate) {\n      return predicate === Error || predicate != null && predicate.prototype instanceof Error;\n    }\n\n    // prevent argument passing to f and ignore return value\n    function isolate(f, x) {\n      return function () {\n        f.call(this);\n        return x;\n      };\n    }\n    function noop() {}\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n});","map":{"version":3,"names":["define","require","fatal","flow","Promise","resolve","reject","origCatch","prototype","done","onResult","onError","h","_handler","when","_maybeFatal","noop","receiver","x","Object","_fatal","otherwise","onRejected","arguments","length","call","ensure","rejectInvalidPredicate","createCatchFilter","handler","predicate","e","evaluatePredicate","isolate","then","orElse","defaultValue","value","tap","onFulfilledSideEffect","TypeError","isError","Error","f","amd","factory","module","exports"],"sources":["C:/Users/twotr/Desktop/College/vsCode/WorkHumanApplication/country-search/node_modules/scatter/node_modules/when/lib/flow.js"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar fatal = require('./fatal');\n\n\treturn function flow(Promise) {\n\n\t\tvar resolve = Promise.resolve;\n\t\tvar reject = Promise.reject;\n\t\tvar origCatch = Promise.prototype['catch'];\n\n\t\t/**\n\t\t * Handle the ultimate fulfillment value or rejection reason, and assume\n\t\t * responsibility for all errors.  If an error propagates out of result\n\t\t * or handleFatalError, it will be rethrown to the host, resulting in a\n\t\t * loud stack track on most platforms and a crash on some.\n\t\t * @param {function?} onResult\n\t\t * @param {function?} onError\n\t\t * @returns {undefined}\n\t\t */\n\t\tPromise.prototype.done = function(onResult, onError) {\n\t\t\tvar h = this._handler;\n\t\t\th.when(this._maybeFatal, noop, this, h.receiver, onResult, onError);\n\t\t};\n\n\t\t/**\n\t\t * Check if x is a rejected promise, and if so, delegate to this._fatal\n\t\t * @private\n\t\t * @param {*} x\n\t\t */\n\t\tPromise.prototype._maybeFatal = function(x) {\n\t\t\tif(Object(x) === x) {\n\t\t\t\tresolve(x)['catch'](this._fatal);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Propagate fatal errors to the host environment.\n\t\t * @private\n\t\t */\n\t\tPromise.prototype._fatal = fatal;\n\n\t\t/**\n\t\t * Add Error-type and predicate matching to catch.  Examples:\n\t\t * promise.catch(TypeError, handleTypeError)\n\t\t *   .catch(predicate, handleMatchedErrors)\n\t\t *   .catch(handleRemainingErrors)\n\t\t * @param onRejected\n\t\t * @returns {*}\n\t\t */\n\t\tPromise.prototype['catch'] = Promise.prototype.otherwise = function(onRejected) {\n\t\t\tif (arguments.length === 1) {\n\t\t\t\treturn origCatch.call(this, onRejected);\n\t\t\t} else {\n\t\t\t\tif(typeof onRejected !== 'function') {\n\t\t\t\t\treturn this.ensure(rejectInvalidPredicate);\n\t\t\t\t}\n\n\t\t\t\treturn origCatch.call(this, createCatchFilter(arguments[1], onRejected));\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Wraps the provided catch handler, so that it will only be called\n\t\t * if the predicate evaluates truthy\n\t\t * @param {?function} handler\n\t\t * @param {function} predicate\n\t\t * @returns {function} conditional catch handler\n\t\t */\n\t\tfunction createCatchFilter(handler, predicate) {\n\t\t\treturn function(e) {\n\t\t\t\treturn evaluatePredicate(e, predicate)\n\t\t\t\t\t? handler.call(this, e)\n\t\t\t\t\t: reject(e);\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Ensures that onFulfilledOrRejected will be called regardless of whether\n\t\t * this promise is fulfilled or rejected.  onFulfilledOrRejected WILL NOT\n\t\t * receive the promises' value or reason.  Any returned value will be disregarded.\n\t\t * onFulfilledOrRejected may throw or return a rejected promise to signal\n\t\t * an additional error.\n\t\t * @param {function} handler handler to be called regardless of\n\t\t *  fulfillment or rejection\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype['finally'] = Promise.prototype.ensure = function(handler) {\n\t\t\tif(typeof handler !== 'function') {\n\t\t\t\t// Optimization: result will not change, return same promise\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\thandler = isolate(handler, this);\n\t\t\treturn this.then(handler, handler);\n\t\t};\n\n\t\t/**\n\t\t * Recover from a failure by returning a defaultValue.  If defaultValue\n\t\t * is a promise, it's fulfillment value will be used.  If defaultValue is\n\t\t * a promise that rejects, the returned promise will reject with the\n\t\t * same reason.\n\t\t * @param {*} defaultValue\n\t\t * @returns {Promise} new promise\n\t\t */\n\t\tPromise.prototype['else'] = Promise.prototype.orElse = function(defaultValue) {\n\t\t\treturn this.then(void 0, function() {\n\t\t\t\treturn defaultValue;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Shortcut for .then(function() { return value; })\n\t\t * @param  {*} value\n\t\t * @return {Promise} a promise that:\n\t\t *  - is fulfilled if value is not a promise, or\n\t\t *  - if value is a promise, will fulfill with its value, or reject\n\t\t *    with its reason.\n\t\t */\n\t\tPromise.prototype['yield'] = function(value) {\n\t\t\treturn this.then(function() {\n\t\t\t\treturn value;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Runs a side effect when this promise fulfills, without changing the\n\t\t * fulfillment value.\n\t\t * @param {function} onFulfilledSideEffect\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.tap = function(onFulfilledSideEffect) {\n\t\t\treturn this.then(onFulfilledSideEffect)['yield'](this);\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n\tfunction rejectInvalidPredicate() {\n\t\tthrow new TypeError('catch predicate must be a function');\n\t}\n\n\tfunction evaluatePredicate(e, predicate) {\n\t\treturn isError(predicate) ? e instanceof predicate : predicate(e);\n\t}\n\n\tfunction isError(predicate) {\n\t\treturn predicate === Error\n\t\t\t|| (predicate != null && predicate.prototype instanceof Error);\n\t}\n\n\t// prevent argument passing to f and ignore return value\n\tfunction isolate(f, x) {\n\t\treturn function() {\n\t\t\tf.call(this);\n\t\t\treturn x;\n\t\t};\n\t}\n\n\tfunction noop() {}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}