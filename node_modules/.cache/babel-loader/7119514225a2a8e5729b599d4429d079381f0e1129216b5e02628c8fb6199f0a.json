{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twotr\\\\Desktop\\\\College\\\\vsCode\\\\WorkHumanApplication\\\\country-search\\\\src\\\\components\\\\backgroundParticles.js\",\n  _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport Particles from \"react-particles\";\n//import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\nimport { loadSlim } from \"tsparticles-slim\"; // if you are going to use `loadSlim`, install the \"tsparticles-slim\" package too.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackPart = () => {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    //await loadFull(engine);\n    await loadSlim(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    url: \"http://foo.bar/particles.json\",\n    init: particlesInit,\n    loaded: particlesLoaded\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(BackPart, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = BackPart;\nexport default BackPart;\nvar _c;\n$RefreshReg$(_c, \"BackPart\");","map":{"version":3,"names":["useCallback","Particles","loadSlim","jsxDEV","_jsxDEV","BackPart","_s","particlesInit","engine","console","log","particlesLoaded","container","id","url","init","loaded","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/twotr/Desktop/College/vsCode/WorkHumanApplication/country-search/src/components/backgroundParticles.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport Particles from \"react-particles\";\r\n//import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\r\nimport { loadSlim } from \"tsparticles-slim\"; // if you are going to use `loadSlim`, install the \"tsparticles-slim\" package too.\r\n\r\nconst BackPart = () => {\r\n    const particlesInit = useCallback(async engine => {\r\n        console.log(engine);\r\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        //await loadFull(engine);\r\n        await loadSlim(engine);\r\n    }, []);\r\n\r\n    const particlesLoaded = useCallback(async container => {\r\n        await console.log(container);\r\n    }, []);\r\n\r\n    return (\r\n        <Particles id=\"tsparticles\" url=\"http://foo.bar/particles.json\" init={particlesInit} loaded={particlesLoaded} />\r\n    );\r\n};\r\nexport default BackPart;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,SAAS,MAAM,iBAAiB;AACvC;AACA,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,aAAa,GAAGP,WAAW,CAAC,MAAMQ,MAAM,IAAI;IAC9CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA;IACA;IACA,MAAMN,QAAQ,CAACM,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGX,WAAW,CAAC,MAAMY,SAAS,IAAI;IACnD,MAAMH,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA,CAACH,SAAS;IAACY,EAAE,EAAC,aAAa;IAACC,GAAG,EAAC,+BAA+B;IAACC,IAAI,EAAER,aAAc;IAACS,MAAM,EAAEL;EAAgB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAExH,CAAC;AAACd,EAAA,CAjBID,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAkBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}