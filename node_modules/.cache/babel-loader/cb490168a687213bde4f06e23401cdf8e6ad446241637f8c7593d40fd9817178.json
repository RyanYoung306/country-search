{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twotr\\\\Desktop\\\\College\\\\vsCode\\\\WorkHumanApplication\\\\country-search\\\\src\\\\components\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { colors } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [];\nasync function getCountries() {\n  try {\n    const response = await fetch('http://localhost:5000/workHuman/countries'); // Add 'http://' before 'localhost'\n    const data = await response.json(); // Use response.json() to parse JSON\n    countries.push(...data);\n    // console.log(data);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// async function print() {\n//   await getCountries();\n//   countries.forEach((country) => {\n//     console.log(country.name);\n//   });\n// }\n\nconst Search = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState('');\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  // const countries = \n  // [\n  //   { name: \"Belgium\", continent: \"Europe\" },\n  //   { name: \"India\", continent: \"Asia\" },\n  //   { name: \"Bolivia\", continent: \"South America\" },\n  //   { name: \"Ghana\", continent: \"Africa\" },\n  //   { name: \"Japan\", continent: \"Asia\" },\n  //   { name: \"Canada\", continent: \"North America\" },\n  //   { name: \"New Zealand\", continent: \"Australasia\" },\n  //   { name: \"Italy\", continent: \"Europe\" },\n  //   { name: \"South Africa\", continent: \"Africa\" },\n  //   { name: \"China\", continent: \"Asia\" },\n  //   { name: \"Paraguay\", continent: \"South America\" },\n  //   { name: \"Usa\", continent: \"North America\" },\n  //   { name: \"France\", continent: \"Europe\" },\n  //   { name: \"Botswana\", continent: \"Africa\" },\n  //   { name: \"Spain\", continent: \"Europe\" },\n  //   { name: \"Senegal\", continent: \"Africa\" },\n  //   { name: \"Brazil\", continent: \"South America\" },\n  //   { name: \"Denmark\", continent: \"Europe\" },\n  //   { name: \"Mexico\", continent: \"South America\" },\n  //   { name: \"Australia\", continent: \"Australasia\" },\n  //   { name: \"Tanzania\", continent: \"Africa\" },\n  //   { name: \"Bangladesh\", continent: \"Asia\" },\n  //   { name: \"Portugal\", continent: \"Europe\" },\n  //   { name: \"Pakistan\", continent:\"Asia\" },\n  // ];\n\n  const handleChange = e => {\n    const inputValue = e.target.value;\n    setSearchInput(inputValue);\n\n    // Filter countries based on the search input\n    const filtered = countries.filter(country => country.name.toLowerCase().includes(inputValue.toLowerCase()));\n    setFilteredCountries(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search here\",\n      onChange: handleChange,\n      value: searchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredCountries.map((country, index) => index % 3 === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: filteredCountries.slice(index, index + 3).map((country, subIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                maxWidth: 600,\n                background: index % 2 === 0 ? 'linear-gradient(90deg, rgba(3,7,30,1) 11%, rgba(55,6,23,1) 21%, rgba(106,4,15,1) 31%, rgba(157,2,8,1) 41%, rgba(208,0,0,1) 51%, rgba(220,47,2,1) 61%, rgba(232,93,4,1) 71%, rgba(244,140,6,1) 81%, rgba(250,163,7,1) 91%);' : 'radial-gradient(circle, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%)',\n                borderColor: \"white\",\n                text: \"white\"\n              },\n              size: \"lg\",\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                sx: {\n                  color: \"white\"\n                },\n                title: country.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                height: \"200\",\n                image: country.flag,\n                alt: \"country flag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"white\",\n                  children: \"Capital: \" + country.details.capital\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"white\",\n                  children: \"Population: \" + country.details.population + \" people\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"white\",\n                  children: \"Currency: \" + country.details.currency\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, subIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"KvZETNnlOW+wFJuN0GZQczAJhyU=\");\n_c = Search;\ngetCountries();\n// print();\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Card","CardHeader","CardMedia","CardContent","Typography","colors","jsxDEV","_jsxDEV","countries","getCountries","response","fetch","data","json","push","e","console","error","Search","_s","searchInput","setSearchInput","filteredCountries","setFilteredCountries","handleChange","inputValue","target","value","filtered","filter","country","name","toLowerCase","includes","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","index","slice","subIndex","variant","sx","maxWidth","background","borderColor","text","size","color","title","component","height","image","flag","alt","details","capital","population","currency","_c","$RefreshReg$"],"sources":["C:/Users/twotr/Desktop/College/vsCode/WorkHumanApplication/country-search/src/components/search.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { colors } from '@mui/material';\r\nconst countries = [];\r\nasync function getCountries() {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/workHuman/countries'); // Add 'http://' before 'localhost'\r\n    const data = await response.json(); // Use response.json() to parse JSON\r\n    countries.push(...data);\r\n    // console.log(data);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n// async function print() {\r\n//   await getCountries();\r\n//   countries.forEach((country) => {\r\n//     console.log(country.name);\r\n//   });\r\n// }\r\n\r\n\r\nconst Search = () => {\r\n  \r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [filteredCountries, setFilteredCountries] = useState([]);\r\n  // const countries = \r\n  // [\r\n  //   { name: \"Belgium\", continent: \"Europe\" },\r\n  //   { name: \"India\", continent: \"Asia\" },\r\n  //   { name: \"Bolivia\", continent: \"South America\" },\r\n  //   { name: \"Ghana\", continent: \"Africa\" },\r\n  //   { name: \"Japan\", continent: \"Asia\" },\r\n  //   { name: \"Canada\", continent: \"North America\" },\r\n  //   { name: \"New Zealand\", continent: \"Australasia\" },\r\n  //   { name: \"Italy\", continent: \"Europe\" },\r\n  //   { name: \"South Africa\", continent: \"Africa\" },\r\n  //   { name: \"China\", continent: \"Asia\" },\r\n  //   { name: \"Paraguay\", continent: \"South America\" },\r\n  //   { name: \"Usa\", continent: \"North America\" },\r\n  //   { name: \"France\", continent: \"Europe\" },\r\n  //   { name: \"Botswana\", continent: \"Africa\" },\r\n  //   { name: \"Spain\", continent: \"Europe\" },\r\n  //   { name: \"Senegal\", continent: \"Africa\" },\r\n  //   { name: \"Brazil\", continent: \"South America\" },\r\n  //   { name: \"Denmark\", continent: \"Europe\" },\r\n  //   { name: \"Mexico\", continent: \"South America\" },\r\n  //   { name: \"Australia\", continent: \"Australasia\" },\r\n  //   { name: \"Tanzania\", continent: \"Africa\" },\r\n  //   { name: \"Bangladesh\", continent: \"Asia\" },\r\n  //   { name: \"Portugal\", continent: \"Europe\" },\r\n  //   { name: \"Pakistan\", continent:\"Asia\" },\r\n  // ];\r\n\r\n  const handleChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    setSearchInput(inputValue);\r\n\r\n    // Filter countries based on the search input\r\n    const filtered = countries.filter((country) =>\r\n      country.name.toLowerCase().includes(inputValue.toLowerCase())\r\n    );\r\n    setFilteredCountries(filtered);\r\n  };\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search here\"\r\n        onChange={handleChange}\r\n        value={searchInput}\r\n      />\r\n      <table>\r\n        <tbody>\r\n          {filteredCountries.map((country, index) => (\r\n           index % 3 === 0 && (\r\n            <tr key={index}>\r\n              {filteredCountries.slice(index, index + 3).map((country, subIndex) => (\r\n                <td key={subIndex}>\r\n              <Card \r\n                variant=\"outlined\" \r\n                sx={{ maxWidth: 600, background: index % 2 === 0 ?'linear-gradient(90deg, rgba(3,7,30,1) 11%, rgba(55,6,23,1) 21%, rgba(106,4,15,1) 31%, rgba(157,2,8,1) 41%, rgba(208,0,0,1) 51%, rgba(220,47,2,1) 61%, rgba(232,93,4,1) 71%, rgba(244,140,6,1) 81%, rgba(250,163,7,1) 91%);' : 'radial-gradient(circle, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%)', \r\n                borderColor: \"white\",\r\n                text: \"white\"\r\n              }} \r\n                size={\"lg\"}\r\n              >\r\n                <CardHeader\r\n                  sx = {{color: \"white\"}}\r\n                  title={country.name}\r\n                  \r\n                />\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"200\"\r\n                  image={country.flag}\r\n                  alt=\"country flag\"\r\n                />\r\n                <CardContent>\r\n                  <Typography variant=\"body1\" color=\"white\" >\r\n                    {\"Capital: \" + country.details.capital}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" color=\"white\">\r\n                    {\"Population: \" + country.details.population + \" people\"}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" color=\"white\">\r\n                    {\"Currency: \" + country.details.currency}\r\n                  </Typography>\r\n              </CardContent>\r\n              </Card>\r\n              </td>\r\n              ))}\r\n            </tr>\r\n              )\r\n          ))} \r\n          \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\ngetCountries();\r\n// print();\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}