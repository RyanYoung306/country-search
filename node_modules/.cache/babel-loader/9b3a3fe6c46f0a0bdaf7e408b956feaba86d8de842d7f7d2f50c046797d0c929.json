{"ast":null,"code":"var DTraceProvider;\nfunction DTraceProviderStub() {}\nDTraceProviderStub.prototype.addProbe = function () {\n  return {\n    'fire': function () {}\n  };\n};\nDTraceProviderStub.prototype.enable = function () {};\nDTraceProviderStub.prototype.fire = function () {};\nvar builds = ['Release', 'default', 'Debug'];\nfor (var i in builds) {\n  try {\n    var binding = require('./build/' + builds[i] + '/DTraceProviderBindings');\n    DTraceProvider = binding.DTraceProvider;\n    break;\n  } catch (e) {\n    // if the platform looks like it _should_ have DTrace\n    // available, log a failure to load the bindings.\n    if (process.platform == 'darwin' || process.platform == 'solaris' || process.platform == 'freebsd') {\n      console.log(e);\n    }\n  }\n}\nif (!DTraceProvider) {\n  DTraceProvider = DTraceProviderStub;\n}\nexports.DTraceProvider = DTraceProvider;\nexports.createDTraceProvider = function (name, module) {\n  if (arguments.length == 2) return new DTraceProvider(name, module);\n  return new DTraceProvider(name);\n};","map":{"version":3,"names":["DTraceProvider","DTraceProviderStub","prototype","addProbe","fire","enable","builds","i","binding","require","e","process","platform","console","log","exports","createDTraceProvider","name","module","arguments","length"],"sources":["C:/Users/twotr/Desktop/College/vsCode/WorkHumanApplication/country-search/node_modules/dtrace-provider/dtrace-provider.js"],"sourcesContent":["var DTraceProvider;\n\nfunction DTraceProviderStub() {}\nDTraceProviderStub.prototype.addProbe = function() {\n    return {\n        'fire': function() { }\n    };\n};\nDTraceProviderStub.prototype.enable = function() {};\nDTraceProviderStub.prototype.fire = function() {};\n\nvar builds = ['Release', 'default', 'Debug'];\n\nfor (var i in builds) {\n    try {\n        var binding = require('./build/' + builds[i] + '/DTraceProviderBindings');\n        DTraceProvider = binding.DTraceProvider;\n        break;\n    } catch (e) {\n        // if the platform looks like it _should_ have DTrace\n        // available, log a failure to load the bindings.\n        if (process.platform == 'darwin' ||\n            process.platform == 'solaris' ||\n            process.platform == 'freebsd') {\n            console.log(e);\n        }\n    }\n}\n\nif (!DTraceProvider) {\n    DTraceProvider = DTraceProviderStub;\n}\n\nexports.DTraceProvider = DTraceProvider;\nexports.createDTraceProvider = function(name, module) {\n    if (arguments.length == 2)\n        return (new DTraceProvider(name, module));\n    return (new DTraceProvider(name));\n};\n"],"mappings":"AAAA,IAAIA,cAAc;AAElB,SAASC,kBAAkBA,CAAA,EAAG,CAAC;AAC/BA,kBAAkB,CAACC,SAAS,CAACC,QAAQ,GAAG,YAAW;EAC/C,OAAO;IACH,MAAM,EAAE,SAAAC,CAAA,EAAW,CAAE;EACzB,CAAC;AACL,CAAC;AACDH,kBAAkB,CAACC,SAAS,CAACG,MAAM,GAAG,YAAW,CAAC,CAAC;AACnDJ,kBAAkB,CAACC,SAAS,CAACE,IAAI,GAAG,YAAW,CAAC,CAAC;AAEjD,IAAIE,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC;AAE5C,KAAK,IAAIC,CAAC,IAAID,MAAM,EAAE;EAClB,IAAI;IACA,IAAIE,OAAO,GAAGC,OAAO,CAAC,UAAU,GAAGH,MAAM,CAACC,CAAC,CAAC,GAAG,yBAAyB,CAAC;IACzEP,cAAc,GAAGQ,OAAO,CAACR,cAAc;IACvC;EACJ,CAAC,CAAC,OAAOU,CAAC,EAAE;IACR;IACA;IACA,IAAIC,OAAO,CAACC,QAAQ,IAAI,QAAQ,IAC5BD,OAAO,CAACC,QAAQ,IAAI,SAAS,IAC7BD,OAAO,CAACC,QAAQ,IAAI,SAAS,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;IAClB;EACJ;AACJ;AAEA,IAAI,CAACV,cAAc,EAAE;EACjBA,cAAc,GAAGC,kBAAkB;AACvC;AAEAc,OAAO,CAACf,cAAc,GAAGA,cAAc;AACvCe,OAAO,CAACC,oBAAoB,GAAG,UAASC,IAAI,EAAEC,MAAM,EAAE;EAClD,IAAIC,SAAS,CAACC,MAAM,IAAI,CAAC,EACrB,OAAQ,IAAIpB,cAAc,CAACiB,IAAI,EAAEC,MAAM,CAAC;EAC5C,OAAQ,IAAIlB,cAAc,CAACiB,IAAI,CAAC;AACpC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}