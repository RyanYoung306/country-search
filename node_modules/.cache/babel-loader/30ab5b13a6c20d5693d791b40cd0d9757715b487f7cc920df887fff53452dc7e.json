{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\twotr\\\\Desktop\\\\College\\\\vsCode\\\\WorkHumanApplication\\\\country-search\\\\src\\\\components\\\\search.js\",\n  _s = $RefreshSig$();\nimport { count } from 'console';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [];\nasync function getCountries() {\n  try {\n    const response = await fetch('http://localhost:5000/workHuman/countries'); // Add 'http://' before 'localhost'\n    const data = await response.json(); // Use response.json() to parse JSON\n    countries.push(data);\n    console.log(data);\n  } catch (e) {\n    console.error(e);\n  }\n}\nconst Search = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState('');\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  // const countries = \n  // [\n  //   { name: \"Belgium\", continent: \"Europe\" },\n  //   { name: \"India\", continent: \"Asia\" },\n  //   { name: \"Bolivia\", continent: \"South America\" },\n  //   { name: \"Ghana\", continent: \"Africa\" },\n  //   { name: \"Japan\", continent: \"Asia\" },\n  //   { name: \"Canada\", continent: \"North America\" },\n  //   { name: \"New Zealand\", continent: \"Australasia\" },\n  //   { name: \"Italy\", continent: \"Europe\" },\n  //   { name: \"South Africa\", continent: \"Africa\" },\n  //   { name: \"China\", continent: \"Asia\" },\n  //   { name: \"Paraguay\", continent: \"South America\" },\n  //   { name: \"Usa\", continent: \"North America\" },\n  //   { name: \"France\", continent: \"Europe\" },\n  //   { name: \"Botswana\", continent: \"Africa\" },\n  //   { name: \"Spain\", continent: \"Europe\" },\n  //   { name: \"Senegal\", continent: \"Africa\" },\n  //   { name: \"Brazil\", continent: \"South America\" },\n  //   { name: \"Denmark\", continent: \"Europe\" },\n  //   { name: \"Mexico\", continent: \"South America\" },\n  //   { name: \"Australia\", continent: \"Australasia\" },\n  //   { name: \"Tanzania\", continent: \"Africa\" },\n  //   { name: \"Bangladesh\", continent: \"Asia\" },\n  //   { name: \"Portugal\", continent: \"Europe\" },\n  //   { name: \"Pakistan\", continent:\"Asia\" },\n  // ];\n\n  const handleChange = e => {\n    const inputValue = e.target.value;\n    setSearchInput(inputValue);\n\n    // Filter countries based on the search input\n    const filtered = countries.filter(country => country.name.toLowerCase().includes(inputValue.toLowerCase()));\n    setFilteredCountries(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getCountries,\n      children: \"Get Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search here\",\n      onChange: handleChange,\n      value: searchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Continent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"KvZETNnlOW+wFJuN0GZQczAJhyU=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["count","React","useState","jsxDEV","_jsxDEV","countries","getCountries","response","fetch","data","json","push","console","log","e","error","Search","_s","searchInput","setSearchInput","filteredCountries","setFilteredCountries","handleChange","inputValue","target","value","filtered","filter","country","name","toLowerCase","includes","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","index","_c","$RefreshReg$"],"sources":["C:/Users/twotr/Desktop/College/vsCode/WorkHumanApplication/country-search/src/components/search.js"],"sourcesContent":["import { count } from 'console';\r\nimport React, { useState } from 'react';\r\nconst countries = [];\r\n\r\nasync function getCountries() {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/workHuman/countries'); // Add 'http://' before 'localhost'\r\n    const data = await response.json(); // Use response.json() to parse JSON\r\n    countries.push(data);\r\n    console.log(data);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst Search = () => {\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [filteredCountries, setFilteredCountries] = useState([]);\r\n  // const countries = \r\n  // [\r\n  //   { name: \"Belgium\", continent: \"Europe\" },\r\n  //   { name: \"India\", continent: \"Asia\" },\r\n  //   { name: \"Bolivia\", continent: \"South America\" },\r\n  //   { name: \"Ghana\", continent: \"Africa\" },\r\n  //   { name: \"Japan\", continent: \"Asia\" },\r\n  //   { name: \"Canada\", continent: \"North America\" },\r\n  //   { name: \"New Zealand\", continent: \"Australasia\" },\r\n  //   { name: \"Italy\", continent: \"Europe\" },\r\n  //   { name: \"South Africa\", continent: \"Africa\" },\r\n  //   { name: \"China\", continent: \"Asia\" },\r\n  //   { name: \"Paraguay\", continent: \"South America\" },\r\n  //   { name: \"Usa\", continent: \"North America\" },\r\n  //   { name: \"France\", continent: \"Europe\" },\r\n  //   { name: \"Botswana\", continent: \"Africa\" },\r\n  //   { name: \"Spain\", continent: \"Europe\" },\r\n  //   { name: \"Senegal\", continent: \"Africa\" },\r\n  //   { name: \"Brazil\", continent: \"South America\" },\r\n  //   { name: \"Denmark\", continent: \"Europe\" },\r\n  //   { name: \"Mexico\", continent: \"South America\" },\r\n  //   { name: \"Australia\", continent: \"Australasia\" },\r\n  //   { name: \"Tanzania\", continent: \"Africa\" },\r\n  //   { name: \"Bangladesh\", continent: \"Asia\" },\r\n  //   { name: \"Portugal\", continent: \"Europe\" },\r\n  //   { name: \"Pakistan\", continent:\"Asia\" },\r\n  // ];\r\n\r\n  const handleChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    setSearchInput(inputValue);\r\n\r\n    // Filter countries based on the search input\r\n    const filtered = countries.filter((country) =>\r\n      country.name.toLowerCase().includes(inputValue.toLowerCase())\r\n    );\r\n    setFilteredCountries(filtered);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={getCountries} >Get Countries</button>\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search here\"\r\n        onChange={handleChange}\r\n        value={searchInput}\r\n      />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Country</th>\r\n            <th>Continent</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredCountries.map((country, index) => (\r\n            <tr key={index}>\r\n              <td>{country.name}</td>\r\n              {/* <td>{country.continent}</td> */}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}